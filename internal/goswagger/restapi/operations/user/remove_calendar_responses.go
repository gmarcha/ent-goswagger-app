// Code generated by go-swagger; DO NOT EDIT.

package user

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/gmarcha/ent-goswagger-app/internal/goswagger/models"
)

// RemoveCalendarNoContentCode is the HTTP code returned for type RemoveCalendarNoContent
const RemoveCalendarNoContentCode int = 204

/*RemoveCalendarNoContent No Content

swagger:response removeCalendarNoContent
*/
type RemoveCalendarNoContent struct {
}

// NewRemoveCalendarNoContent creates RemoveCalendarNoContent with default headers values
func NewRemoveCalendarNoContent() *RemoveCalendarNoContent {

	return &RemoveCalendarNoContent{}
}

// WriteResponse to the client
func (o *RemoveCalendarNoContent) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(204)
}

// RemoveCalendarBadRequestCode is the HTTP code returned for type RemoveCalendarBadRequest
const RemoveCalendarBadRequestCode int = 400

/*RemoveCalendarBadRequest Bad request

swagger:response removeCalendarBadRequest
*/
type RemoveCalendarBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewRemoveCalendarBadRequest creates RemoveCalendarBadRequest with default headers values
func NewRemoveCalendarBadRequest() *RemoveCalendarBadRequest {

	return &RemoveCalendarBadRequest{}
}

// WithPayload adds the payload to the remove calendar bad request response
func (o *RemoveCalendarBadRequest) WithPayload(payload *models.Error) *RemoveCalendarBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the remove calendar bad request response
func (o *RemoveCalendarBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RemoveCalendarBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// RemoveCalendarNotFoundCode is the HTTP code returned for type RemoveCalendarNotFound
const RemoveCalendarNotFoundCode int = 404

/*RemoveCalendarNotFound Not Found

swagger:response removeCalendarNotFound
*/
type RemoveCalendarNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewRemoveCalendarNotFound creates RemoveCalendarNotFound with default headers values
func NewRemoveCalendarNotFound() *RemoveCalendarNotFound {

	return &RemoveCalendarNotFound{}
}

// WithPayload adds the payload to the remove calendar not found response
func (o *RemoveCalendarNotFound) WithPayload(payload *models.Error) *RemoveCalendarNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the remove calendar not found response
func (o *RemoveCalendarNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RemoveCalendarNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// RemoveCalendarInternalServerErrorCode is the HTTP code returned for type RemoveCalendarInternalServerError
const RemoveCalendarInternalServerErrorCode int = 500

/*RemoveCalendarInternalServerError Internal Server Error

swagger:response removeCalendarInternalServerError
*/
type RemoveCalendarInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewRemoveCalendarInternalServerError creates RemoveCalendarInternalServerError with default headers values
func NewRemoveCalendarInternalServerError() *RemoveCalendarInternalServerError {

	return &RemoveCalendarInternalServerError{}
}

// WithPayload adds the payload to the remove calendar internal server error response
func (o *RemoveCalendarInternalServerError) WithPayload(payload *models.Error) *RemoveCalendarInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the remove calendar internal server error response
func (o *RemoveCalendarInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RemoveCalendarInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
