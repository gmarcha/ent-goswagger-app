// Code generated by go-swagger; DO NOT EDIT.

package user

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/gmarcha/ent-goswagger-app/internal/goswagger/models"
)

// UnsubscribeMeNoContentCode is the HTTP code returned for type UnsubscribeMeNoContent
const UnsubscribeMeNoContentCode int = 204

/*UnsubscribeMeNoContent No Content

swagger:response unsubscribeMeNoContent
*/
type UnsubscribeMeNoContent struct {
}

// NewUnsubscribeMeNoContent creates UnsubscribeMeNoContent with default headers values
func NewUnsubscribeMeNoContent() *UnsubscribeMeNoContent {

	return &UnsubscribeMeNoContent{}
}

// WriteResponse to the client
func (o *UnsubscribeMeNoContent) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(204)
}

// UnsubscribeMeBadRequestCode is the HTTP code returned for type UnsubscribeMeBadRequest
const UnsubscribeMeBadRequestCode int = 400

/*UnsubscribeMeBadRequest Bad request

swagger:response unsubscribeMeBadRequest
*/
type UnsubscribeMeBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewUnsubscribeMeBadRequest creates UnsubscribeMeBadRequest with default headers values
func NewUnsubscribeMeBadRequest() *UnsubscribeMeBadRequest {

	return &UnsubscribeMeBadRequest{}
}

// WithPayload adds the payload to the unsubscribe me bad request response
func (o *UnsubscribeMeBadRequest) WithPayload(payload *models.Error) *UnsubscribeMeBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the unsubscribe me bad request response
func (o *UnsubscribeMeBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UnsubscribeMeBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UnsubscribeMeUnauthorizedCode is the HTTP code returned for type UnsubscribeMeUnauthorized
const UnsubscribeMeUnauthorizedCode int = 401

/*UnsubscribeMeUnauthorized Unauthorized

swagger:response unsubscribeMeUnauthorized
*/
type UnsubscribeMeUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewUnsubscribeMeUnauthorized creates UnsubscribeMeUnauthorized with default headers values
func NewUnsubscribeMeUnauthorized() *UnsubscribeMeUnauthorized {

	return &UnsubscribeMeUnauthorized{}
}

// WithPayload adds the payload to the unsubscribe me unauthorized response
func (o *UnsubscribeMeUnauthorized) WithPayload(payload *models.Error) *UnsubscribeMeUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the unsubscribe me unauthorized response
func (o *UnsubscribeMeUnauthorized) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UnsubscribeMeUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UnsubscribeMeForbiddenCode is the HTTP code returned for type UnsubscribeMeForbidden
const UnsubscribeMeForbiddenCode int = 403

/*UnsubscribeMeForbidden Forbidden

swagger:response unsubscribeMeForbidden
*/
type UnsubscribeMeForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewUnsubscribeMeForbidden creates UnsubscribeMeForbidden with default headers values
func NewUnsubscribeMeForbidden() *UnsubscribeMeForbidden {

	return &UnsubscribeMeForbidden{}
}

// WithPayload adds the payload to the unsubscribe me forbidden response
func (o *UnsubscribeMeForbidden) WithPayload(payload *models.Error) *UnsubscribeMeForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the unsubscribe me forbidden response
func (o *UnsubscribeMeForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UnsubscribeMeForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UnsubscribeMeNotFoundCode is the HTTP code returned for type UnsubscribeMeNotFound
const UnsubscribeMeNotFoundCode int = 404

/*UnsubscribeMeNotFound Not Found

swagger:response unsubscribeMeNotFound
*/
type UnsubscribeMeNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewUnsubscribeMeNotFound creates UnsubscribeMeNotFound with default headers values
func NewUnsubscribeMeNotFound() *UnsubscribeMeNotFound {

	return &UnsubscribeMeNotFound{}
}

// WithPayload adds the payload to the unsubscribe me not found response
func (o *UnsubscribeMeNotFound) WithPayload(payload *models.Error) *UnsubscribeMeNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the unsubscribe me not found response
func (o *UnsubscribeMeNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UnsubscribeMeNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UnsubscribeMeInternalServerErrorCode is the HTTP code returned for type UnsubscribeMeInternalServerError
const UnsubscribeMeInternalServerErrorCode int = 500

/*UnsubscribeMeInternalServerError Internal Server Error

swagger:response unsubscribeMeInternalServerError
*/
type UnsubscribeMeInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewUnsubscribeMeInternalServerError creates UnsubscribeMeInternalServerError with default headers values
func NewUnsubscribeMeInternalServerError() *UnsubscribeMeInternalServerError {

	return &UnsubscribeMeInternalServerError{}
}

// WithPayload adds the payload to the unsubscribe me internal server error response
func (o *UnsubscribeMeInternalServerError) WithPayload(payload *models.Error) *UnsubscribeMeInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the unsubscribe me internal server error response
func (o *UnsubscribeMeInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UnsubscribeMeInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
