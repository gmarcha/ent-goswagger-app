// Code generated by go-swagger; DO NOT EDIT.

package user

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/gmarcha/ent-goswagger-app/internal/goswagger/models"
)

// AddRoleCreatedCode is the HTTP code returned for type AddRoleCreated
const AddRoleCreatedCode int = 201

/*AddRoleCreated OK

swagger:response addRoleCreated
*/
type AddRoleCreated struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewAddRoleCreated creates AddRoleCreated with default headers values
func NewAddRoleCreated() *AddRoleCreated {

	return &AddRoleCreated{}
}

// WithPayload adds the payload to the add role created response
func (o *AddRoleCreated) WithPayload(payload string) *AddRoleCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add role created response
func (o *AddRoleCreated) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddRoleCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// AddRoleBadRequestCode is the HTTP code returned for type AddRoleBadRequest
const AddRoleBadRequestCode int = 400

/*AddRoleBadRequest Bad request

swagger:response addRoleBadRequest
*/
type AddRoleBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewAddRoleBadRequest creates AddRoleBadRequest with default headers values
func NewAddRoleBadRequest() *AddRoleBadRequest {

	return &AddRoleBadRequest{}
}

// WithPayload adds the payload to the add role bad request response
func (o *AddRoleBadRequest) WithPayload(payload *models.Error) *AddRoleBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add role bad request response
func (o *AddRoleBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddRoleBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AddRoleNotFoundCode is the HTTP code returned for type AddRoleNotFound
const AddRoleNotFoundCode int = 404

/*AddRoleNotFound Not Found

swagger:response addRoleNotFound
*/
type AddRoleNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewAddRoleNotFound creates AddRoleNotFound with default headers values
func NewAddRoleNotFound() *AddRoleNotFound {

	return &AddRoleNotFound{}
}

// WithPayload adds the payload to the add role not found response
func (o *AddRoleNotFound) WithPayload(payload *models.Error) *AddRoleNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add role not found response
func (o *AddRoleNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddRoleNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AddRoleInternalServerErrorCode is the HTTP code returned for type AddRoleInternalServerError
const AddRoleInternalServerErrorCode int = 500

/*AddRoleInternalServerError Internal Server Error

swagger:response addRoleInternalServerError
*/
type AddRoleInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewAddRoleInternalServerError creates AddRoleInternalServerError with default headers values
func NewAddRoleInternalServerError() *AddRoleInternalServerError {

	return &AddRoleInternalServerError{}
}

// WithPayload adds the payload to the add role internal server error response
func (o *AddRoleInternalServerError) WithPayload(payload *models.Error) *AddRoleInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add role internal server error response
func (o *AddRoleInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddRoleInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
