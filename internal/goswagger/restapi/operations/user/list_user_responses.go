// Code generated by go-swagger; DO NOT EDIT.

package user

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/gmarcha/ent-goswagger-app/internal/ent"
	"github.com/gmarcha/ent-goswagger-app/internal/goswagger/models"
)

// ListUserOKCode is the HTTP code returned for type ListUserOK
const ListUserOKCode int = 200

/*ListUserOK OK

swagger:response listUserOK
*/
type ListUserOK struct {

	/*
	  In: Body
	*/
	Payload []*ent.User `json:"body,omitempty"`
}

// NewListUserOK creates ListUserOK with default headers values
func NewListUserOK() *ListUserOK {

	return &ListUserOK{}
}

// WithPayload adds the payload to the list user o k response
func (o *ListUserOK) WithPayload(payload []*ent.User) *ListUserOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list user o k response
func (o *ListUserOK) SetPayload(payload []*ent.User) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListUserOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*ent.User, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// ListUserBadRequestCode is the HTTP code returned for type ListUserBadRequest
const ListUserBadRequestCode int = 400

/*ListUserBadRequest Bad request

swagger:response listUserBadRequest
*/
type ListUserBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewListUserBadRequest creates ListUserBadRequest with default headers values
func NewListUserBadRequest() *ListUserBadRequest {

	return &ListUserBadRequest{}
}

// WithPayload adds the payload to the list user bad request response
func (o *ListUserBadRequest) WithPayload(payload *models.Error) *ListUserBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list user bad request response
func (o *ListUserBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListUserBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ListUserInternalServerErrorCode is the HTTP code returned for type ListUserInternalServerError
const ListUserInternalServerErrorCode int = 500

/*ListUserInternalServerError Internal Server Error

swagger:response listUserInternalServerError
*/
type ListUserInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewListUserInternalServerError creates ListUserInternalServerError with default headers values
func NewListUserInternalServerError() *ListUserInternalServerError {

	return &ListUserInternalServerError{}
}

// WithPayload adds the payload to the list user internal server error response
func (o *ListUserInternalServerError) WithPayload(payload *models.Error) *ListUserInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list user internal server error response
func (o *ListUserInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListUserInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
