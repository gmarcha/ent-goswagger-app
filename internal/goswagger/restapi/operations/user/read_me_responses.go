// Code generated by go-swagger; DO NOT EDIT.

package user

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/gamarcha/ent-goswagger-app/internal/goswagger/models"
)

// ReadMeOKCode is the HTTP code returned for type ReadMeOK
const ReadMeOKCode int = 200

/*ReadMeOK OK

swagger:response readMeOK
*/
type ReadMeOK struct {

	/*
	  In: Body
	*/
	Payload *models.User `json:"body,omitempty"`
}

// NewReadMeOK creates ReadMeOK with default headers values
func NewReadMeOK() *ReadMeOK {

	return &ReadMeOK{}
}

// WithPayload adds the payload to the read me o k response
func (o *ReadMeOK) WithPayload(payload *models.User) *ReadMeOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the read me o k response
func (o *ReadMeOK) SetPayload(payload *models.User) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ReadMeOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ReadMeInternalServerErrorCode is the HTTP code returned for type ReadMeInternalServerError
const ReadMeInternalServerErrorCode int = 500

/*ReadMeInternalServerError Internal Server Error

swagger:response readMeInternalServerError
*/
type ReadMeInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewReadMeInternalServerError creates ReadMeInternalServerError with default headers values
func NewReadMeInternalServerError() *ReadMeInternalServerError {

	return &ReadMeInternalServerError{}
}

// WithPayload adds the payload to the read me internal server error response
func (o *ReadMeInternalServerError) WithPayload(payload *models.Error) *ReadMeInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the read me internal server error response
func (o *ReadMeInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ReadMeInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
