// Code generated by go-swagger; DO NOT EDIT.

package user

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/gmarcha/ent-goswagger-app/internal/goswagger/models"
)

// UnsubscribeUserNoContentCode is the HTTP code returned for type UnsubscribeUserNoContent
const UnsubscribeUserNoContentCode int = 204

/*UnsubscribeUserNoContent No Content

swagger:response unsubscribeUserNoContent
*/
type UnsubscribeUserNoContent struct {
}

// NewUnsubscribeUserNoContent creates UnsubscribeUserNoContent with default headers values
func NewUnsubscribeUserNoContent() *UnsubscribeUserNoContent {

	return &UnsubscribeUserNoContent{}
}

// WriteResponse to the client
func (o *UnsubscribeUserNoContent) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(204)
}

// UnsubscribeUserBadRequestCode is the HTTP code returned for type UnsubscribeUserBadRequest
const UnsubscribeUserBadRequestCode int = 400

/*UnsubscribeUserBadRequest Bad request

swagger:response unsubscribeUserBadRequest
*/
type UnsubscribeUserBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewUnsubscribeUserBadRequest creates UnsubscribeUserBadRequest with default headers values
func NewUnsubscribeUserBadRequest() *UnsubscribeUserBadRequest {

	return &UnsubscribeUserBadRequest{}
}

// WithPayload adds the payload to the unsubscribe user bad request response
func (o *UnsubscribeUserBadRequest) WithPayload(payload *models.Error) *UnsubscribeUserBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the unsubscribe user bad request response
func (o *UnsubscribeUserBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UnsubscribeUserBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UnsubscribeUserNotFoundCode is the HTTP code returned for type UnsubscribeUserNotFound
const UnsubscribeUserNotFoundCode int = 404

/*UnsubscribeUserNotFound Not Found

swagger:response unsubscribeUserNotFound
*/
type UnsubscribeUserNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewUnsubscribeUserNotFound creates UnsubscribeUserNotFound with default headers values
func NewUnsubscribeUserNotFound() *UnsubscribeUserNotFound {

	return &UnsubscribeUserNotFound{}
}

// WithPayload adds the payload to the unsubscribe user not found response
func (o *UnsubscribeUserNotFound) WithPayload(payload *models.Error) *UnsubscribeUserNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the unsubscribe user not found response
func (o *UnsubscribeUserNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UnsubscribeUserNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UnsubscribeUserInternalServerErrorCode is the HTTP code returned for type UnsubscribeUserInternalServerError
const UnsubscribeUserInternalServerErrorCode int = 500

/*UnsubscribeUserInternalServerError Internal Server Error

swagger:response unsubscribeUserInternalServerError
*/
type UnsubscribeUserInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewUnsubscribeUserInternalServerError creates UnsubscribeUserInternalServerError with default headers values
func NewUnsubscribeUserInternalServerError() *UnsubscribeUserInternalServerError {

	return &UnsubscribeUserInternalServerError{}
}

// WithPayload adds the payload to the unsubscribe user internal server error response
func (o *UnsubscribeUserInternalServerError) WithPayload(payload *models.Error) *UnsubscribeUserInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the unsubscribe user internal server error response
func (o *UnsubscribeUserInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UnsubscribeUserInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
