// Code generated by go-swagger; DO NOT EDIT.

package event_type

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/gmarcha/ent-goswagger-app/internal/ent"
	"github.com/gmarcha/ent-goswagger-app/internal/goswagger/models"
)

// UpdateTypeOKCode is the HTTP code returned for type UpdateTypeOK
const UpdateTypeOKCode int = 200

/*UpdateTypeOK OK

swagger:response updateTypeOK
*/
type UpdateTypeOK struct {

	/*
	  In: Body
	*/
	Payload *ent.EventType `json:"body,omitempty"`
}

// NewUpdateTypeOK creates UpdateTypeOK with default headers values
func NewUpdateTypeOK() *UpdateTypeOK {

	return &UpdateTypeOK{}
}

// WithPayload adds the payload to the update type o k response
func (o *UpdateTypeOK) WithPayload(payload *ent.EventType) *UpdateTypeOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update type o k response
func (o *UpdateTypeOK) SetPayload(payload *ent.EventType) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateTypeOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateTypeBadRequestCode is the HTTP code returned for type UpdateTypeBadRequest
const UpdateTypeBadRequestCode int = 400

/*UpdateTypeBadRequest Bad request

swagger:response updateTypeBadRequest
*/
type UpdateTypeBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewUpdateTypeBadRequest creates UpdateTypeBadRequest with default headers values
func NewUpdateTypeBadRequest() *UpdateTypeBadRequest {

	return &UpdateTypeBadRequest{}
}

// WithPayload adds the payload to the update type bad request response
func (o *UpdateTypeBadRequest) WithPayload(payload *models.Error) *UpdateTypeBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update type bad request response
func (o *UpdateTypeBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateTypeBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateTypeUnauthorizedCode is the HTTP code returned for type UpdateTypeUnauthorized
const UpdateTypeUnauthorizedCode int = 401

/*UpdateTypeUnauthorized Unauthorized

swagger:response updateTypeUnauthorized
*/
type UpdateTypeUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewUpdateTypeUnauthorized creates UpdateTypeUnauthorized with default headers values
func NewUpdateTypeUnauthorized() *UpdateTypeUnauthorized {

	return &UpdateTypeUnauthorized{}
}

// WithPayload adds the payload to the update type unauthorized response
func (o *UpdateTypeUnauthorized) WithPayload(payload *models.Error) *UpdateTypeUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update type unauthorized response
func (o *UpdateTypeUnauthorized) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateTypeUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateTypeForbiddenCode is the HTTP code returned for type UpdateTypeForbidden
const UpdateTypeForbiddenCode int = 403

/*UpdateTypeForbidden Forbidden

swagger:response updateTypeForbidden
*/
type UpdateTypeForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewUpdateTypeForbidden creates UpdateTypeForbidden with default headers values
func NewUpdateTypeForbidden() *UpdateTypeForbidden {

	return &UpdateTypeForbidden{}
}

// WithPayload adds the payload to the update type forbidden response
func (o *UpdateTypeForbidden) WithPayload(payload *models.Error) *UpdateTypeForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update type forbidden response
func (o *UpdateTypeForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateTypeForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateTypeNotFoundCode is the HTTP code returned for type UpdateTypeNotFound
const UpdateTypeNotFoundCode int = 404

/*UpdateTypeNotFound Not Found

swagger:response updateTypeNotFound
*/
type UpdateTypeNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewUpdateTypeNotFound creates UpdateTypeNotFound with default headers values
func NewUpdateTypeNotFound() *UpdateTypeNotFound {

	return &UpdateTypeNotFound{}
}

// WithPayload adds the payload to the update type not found response
func (o *UpdateTypeNotFound) WithPayload(payload *models.Error) *UpdateTypeNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update type not found response
func (o *UpdateTypeNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateTypeNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateTypeInternalServerErrorCode is the HTTP code returned for type UpdateTypeInternalServerError
const UpdateTypeInternalServerErrorCode int = 500

/*UpdateTypeInternalServerError Internal Server Error

swagger:response updateTypeInternalServerError
*/
type UpdateTypeInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewUpdateTypeInternalServerError creates UpdateTypeInternalServerError with default headers values
func NewUpdateTypeInternalServerError() *UpdateTypeInternalServerError {

	return &UpdateTypeInternalServerError{}
}

// WithPayload adds the payload to the update type internal server error response
func (o *UpdateTypeInternalServerError) WithPayload(payload *models.Error) *UpdateTypeInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update type internal server error response
func (o *UpdateTypeInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateTypeInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
