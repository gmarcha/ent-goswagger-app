// Code generated by go-swagger; DO NOT EDIT.

package event

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/gmarcha/ent-goswagger-app/internal/ent"
	"github.com/gmarcha/ent-goswagger-app/internal/goswagger/models"
)

// ListEventOKCode is the HTTP code returned for type ListEventOK
const ListEventOKCode int = 200

/*ListEventOK OK

swagger:response listEventOK
*/
type ListEventOK struct {

	/*
	  In: Body
	*/
	Payload []*ent.Event `json:"body,omitempty"`
}

// NewListEventOK creates ListEventOK with default headers values
func NewListEventOK() *ListEventOK {

	return &ListEventOK{}
}

// WithPayload adds the payload to the list event o k response
func (o *ListEventOK) WithPayload(payload []*ent.Event) *ListEventOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list event o k response
func (o *ListEventOK) SetPayload(payload []*ent.Event) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListEventOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*ent.Event, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// ListEventBadRequestCode is the HTTP code returned for type ListEventBadRequest
const ListEventBadRequestCode int = 400

/*ListEventBadRequest Bad request

swagger:response listEventBadRequest
*/
type ListEventBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewListEventBadRequest creates ListEventBadRequest with default headers values
func NewListEventBadRequest() *ListEventBadRequest {

	return &ListEventBadRequest{}
}

// WithPayload adds the payload to the list event bad request response
func (o *ListEventBadRequest) WithPayload(payload *models.Error) *ListEventBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list event bad request response
func (o *ListEventBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListEventBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ListEventInternalServerErrorCode is the HTTP code returned for type ListEventInternalServerError
const ListEventInternalServerErrorCode int = 500

/*ListEventInternalServerError Internal Server Error

swagger:response listEventInternalServerError
*/
type ListEventInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewListEventInternalServerError creates ListEventInternalServerError with default headers values
func NewListEventInternalServerError() *ListEventInternalServerError {

	return &ListEventInternalServerError{}
}

// WithPayload adds the payload to the list event internal server error response
func (o *ListEventInternalServerError) WithPayload(payload *models.Error) *ListEventInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list event internal server error response
func (o *ListEventInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListEventInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
