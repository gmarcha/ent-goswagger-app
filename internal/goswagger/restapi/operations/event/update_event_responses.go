// Code generated by go-swagger; DO NOT EDIT.

package event

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/gmarcha/ent-goswagger-app/internal/ent"
	"github.com/gmarcha/ent-goswagger-app/internal/goswagger/models"
)

// UpdateEventOKCode is the HTTP code returned for type UpdateEventOK
const UpdateEventOKCode int = 200

/*UpdateEventOK OK

swagger:response updateEventOK
*/
type UpdateEventOK struct {

	/*
	  In: Body
	*/
	Payload *ent.Event `json:"body,omitempty"`
}

// NewUpdateEventOK creates UpdateEventOK with default headers values
func NewUpdateEventOK() *UpdateEventOK {

	return &UpdateEventOK{}
}

// WithPayload adds the payload to the update event o k response
func (o *UpdateEventOK) WithPayload(payload *ent.Event) *UpdateEventOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update event o k response
func (o *UpdateEventOK) SetPayload(payload *ent.Event) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateEventOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateEventBadRequestCode is the HTTP code returned for type UpdateEventBadRequest
const UpdateEventBadRequestCode int = 400

/*UpdateEventBadRequest Bad request

swagger:response updateEventBadRequest
*/
type UpdateEventBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewUpdateEventBadRequest creates UpdateEventBadRequest with default headers values
func NewUpdateEventBadRequest() *UpdateEventBadRequest {

	return &UpdateEventBadRequest{}
}

// WithPayload adds the payload to the update event bad request response
func (o *UpdateEventBadRequest) WithPayload(payload *models.Error) *UpdateEventBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update event bad request response
func (o *UpdateEventBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateEventBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateEventUnauthorizedCode is the HTTP code returned for type UpdateEventUnauthorized
const UpdateEventUnauthorizedCode int = 401

/*UpdateEventUnauthorized Unauthorized

swagger:response updateEventUnauthorized
*/
type UpdateEventUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewUpdateEventUnauthorized creates UpdateEventUnauthorized with default headers values
func NewUpdateEventUnauthorized() *UpdateEventUnauthorized {

	return &UpdateEventUnauthorized{}
}

// WithPayload adds the payload to the update event unauthorized response
func (o *UpdateEventUnauthorized) WithPayload(payload *models.Error) *UpdateEventUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update event unauthorized response
func (o *UpdateEventUnauthorized) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateEventUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateEventForbiddenCode is the HTTP code returned for type UpdateEventForbidden
const UpdateEventForbiddenCode int = 403

/*UpdateEventForbidden Forbidden

swagger:response updateEventForbidden
*/
type UpdateEventForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewUpdateEventForbidden creates UpdateEventForbidden with default headers values
func NewUpdateEventForbidden() *UpdateEventForbidden {

	return &UpdateEventForbidden{}
}

// WithPayload adds the payload to the update event forbidden response
func (o *UpdateEventForbidden) WithPayload(payload *models.Error) *UpdateEventForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update event forbidden response
func (o *UpdateEventForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateEventForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateEventNotFoundCode is the HTTP code returned for type UpdateEventNotFound
const UpdateEventNotFoundCode int = 404

/*UpdateEventNotFound Not Found

swagger:response updateEventNotFound
*/
type UpdateEventNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewUpdateEventNotFound creates UpdateEventNotFound with default headers values
func NewUpdateEventNotFound() *UpdateEventNotFound {

	return &UpdateEventNotFound{}
}

// WithPayload adds the payload to the update event not found response
func (o *UpdateEventNotFound) WithPayload(payload *models.Error) *UpdateEventNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update event not found response
func (o *UpdateEventNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateEventNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateEventInternalServerErrorCode is the HTTP code returned for type UpdateEventInternalServerError
const UpdateEventInternalServerErrorCode int = 500

/*UpdateEventInternalServerError Internal Server Error

swagger:response updateEventInternalServerError
*/
type UpdateEventInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewUpdateEventInternalServerError creates UpdateEventInternalServerError with default headers values
func NewUpdateEventInternalServerError() *UpdateEventInternalServerError {

	return &UpdateEventInternalServerError{}
}

// WithPayload adds the payload to the update event internal server error response
func (o *UpdateEventInternalServerError) WithPayload(payload *models.Error) *UpdateEventInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update event internal server error response
func (o *UpdateEventInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateEventInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
