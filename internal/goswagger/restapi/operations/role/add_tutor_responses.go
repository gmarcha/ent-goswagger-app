// Code generated by go-swagger; DO NOT EDIT.

package role

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/gmarcha/ent-goswagger-app/internal/ent"
	"github.com/gmarcha/ent-goswagger-app/internal/goswagger/models"
)

// AddTutorCreatedCode is the HTTP code returned for type AddTutorCreated
const AddTutorCreatedCode int = 201

/*AddTutorCreated Created

swagger:response addTutorCreated
*/
type AddTutorCreated struct {

	/*
	  In: Body
	*/
	Payload []*ent.Role `json:"body,omitempty"`
}

// NewAddTutorCreated creates AddTutorCreated with default headers values
func NewAddTutorCreated() *AddTutorCreated {

	return &AddTutorCreated{}
}

// WithPayload adds the payload to the add tutor created response
func (o *AddTutorCreated) WithPayload(payload []*ent.Role) *AddTutorCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add tutor created response
func (o *AddTutorCreated) SetPayload(payload []*ent.Role) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddTutorCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*ent.Role, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// AddTutorBadRequestCode is the HTTP code returned for type AddTutorBadRequest
const AddTutorBadRequestCode int = 400

/*AddTutorBadRequest Bad request

swagger:response addTutorBadRequest
*/
type AddTutorBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewAddTutorBadRequest creates AddTutorBadRequest with default headers values
func NewAddTutorBadRequest() *AddTutorBadRequest {

	return &AddTutorBadRequest{}
}

// WithPayload adds the payload to the add tutor bad request response
func (o *AddTutorBadRequest) WithPayload(payload *models.Error) *AddTutorBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add tutor bad request response
func (o *AddTutorBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddTutorBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AddTutorUnauthorizedCode is the HTTP code returned for type AddTutorUnauthorized
const AddTutorUnauthorizedCode int = 401

/*AddTutorUnauthorized Unauthorized

swagger:response addTutorUnauthorized
*/
type AddTutorUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewAddTutorUnauthorized creates AddTutorUnauthorized with default headers values
func NewAddTutorUnauthorized() *AddTutorUnauthorized {

	return &AddTutorUnauthorized{}
}

// WithPayload adds the payload to the add tutor unauthorized response
func (o *AddTutorUnauthorized) WithPayload(payload *models.Error) *AddTutorUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add tutor unauthorized response
func (o *AddTutorUnauthorized) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddTutorUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AddTutorForbiddenCode is the HTTP code returned for type AddTutorForbidden
const AddTutorForbiddenCode int = 403

/*AddTutorForbidden Forbidden

swagger:response addTutorForbidden
*/
type AddTutorForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewAddTutorForbidden creates AddTutorForbidden with default headers values
func NewAddTutorForbidden() *AddTutorForbidden {

	return &AddTutorForbidden{}
}

// WithPayload adds the payload to the add tutor forbidden response
func (o *AddTutorForbidden) WithPayload(payload *models.Error) *AddTutorForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add tutor forbidden response
func (o *AddTutorForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddTutorForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AddTutorNotFoundCode is the HTTP code returned for type AddTutorNotFound
const AddTutorNotFoundCode int = 404

/*AddTutorNotFound Not Found

swagger:response addTutorNotFound
*/
type AddTutorNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewAddTutorNotFound creates AddTutorNotFound with default headers values
func NewAddTutorNotFound() *AddTutorNotFound {

	return &AddTutorNotFound{}
}

// WithPayload adds the payload to the add tutor not found response
func (o *AddTutorNotFound) WithPayload(payload *models.Error) *AddTutorNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add tutor not found response
func (o *AddTutorNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddTutorNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AddTutorInternalServerErrorCode is the HTTP code returned for type AddTutorInternalServerError
const AddTutorInternalServerErrorCode int = 500

/*AddTutorInternalServerError Internal Server Error

swagger:response addTutorInternalServerError
*/
type AddTutorInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewAddTutorInternalServerError creates AddTutorInternalServerError with default headers values
func NewAddTutorInternalServerError() *AddTutorInternalServerError {

	return &AddTutorInternalServerError{}
}

// WithPayload adds the payload to the add tutor internal server error response
func (o *AddTutorInternalServerError) WithPayload(payload *models.Error) *AddTutorInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add tutor internal server error response
func (o *AddTutorInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddTutorInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
