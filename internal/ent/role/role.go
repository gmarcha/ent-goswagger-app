// Code generated by entc, DO NOT EDIT.

package role

const (
	// Label holds the string label denoting the role type in the database.
	Label = "role"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldEvent holds the string denoting the event field in the database.
	FieldEvent = "event"
	// FieldEventWrite holds the string denoting the event_write field in the database.
	FieldEventWrite = "event_write"
	// FieldUser holds the string denoting the user field in the database.
	FieldUser = "user"
	// FieldUserSubscription holds the string denoting the user_subscription field in the database.
	FieldUserSubscription = "user_subscription"
	// FieldUserWrite holds the string denoting the user_write field in the database.
	FieldUserWrite = "user_write"
	// EdgeUsers holds the string denoting the users edge name in mutations.
	EdgeUsers = "users"
	// Table holds the table name of the role in the database.
	Table = "roles"
	// UsersTable is the table that holds the users relation/edge. The primary key declared below.
	UsersTable = "role_users"
	// UsersInverseTable is the table name for the User entity.
	// It exists in this package in order to avoid circular dependency with the "user" package.
	UsersInverseTable = "users"
)

// Columns holds all SQL columns for role fields.
var Columns = []string{
	FieldID,
	FieldName,
	FieldEvent,
	FieldEventWrite,
	FieldUser,
	FieldUserSubscription,
	FieldUserWrite,
}

var (
	// UsersPrimaryKey and UsersColumn2 are the table columns denoting the
	// primary key for the users relation (M2M).
	UsersPrimaryKey = []string{"role_id", "user_id"}
)

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultEvent holds the default value on creation for the "event" field.
	DefaultEvent bool
	// DefaultEventWrite holds the default value on creation for the "event_write" field.
	DefaultEventWrite bool
	// DefaultUser holds the default value on creation for the "user" field.
	DefaultUser bool
	// DefaultUserSubscription holds the default value on creation for the "user_subscription" field.
	DefaultUserSubscription bool
	// DefaultUserWrite holds the default value on creation for the "user_write" field.
	DefaultUserWrite bool
)
