// Code generated by entc, DO NOT EDIT.

package ent

import (
	"time"

	"github.com/gamarcha/ent-goswagger-app/ent/event"
	"github.com/gamarcha/ent-goswagger-app/ent/schema"
	"github.com/gamarcha/ent-goswagger-app/ent/user"
	"github.com/google/uuid"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	eventFields := schema.Event{}.Fields()
	_ = eventFields
	// eventDescTutorsRequired is the schema descriptor for tutorsRequired field.
	eventDescTutorsRequired := eventFields[3].Descriptor()
	// event.TutorsRequiredValidator is a validator for the "tutorsRequired" field. It is called by the builders before save.
	event.TutorsRequiredValidator = eventDescTutorsRequired.Validators[0].(func(int64) error)
	// eventDescTutorsSubscribed is the schema descriptor for tutorsSubscribed field.
	eventDescTutorsSubscribed := eventFields[4].Descriptor()
	// event.TutorsSubscribedValidator is a validator for the "tutorsSubscribed" field. It is called by the builders before save.
	event.TutorsSubscribedValidator = eventDescTutorsSubscribed.Validators[0].(func(int64) error)
	// eventDescWalletsRewards is the schema descriptor for walletsRewards field.
	eventDescWalletsRewards := eventFields[5].Descriptor()
	// event.WalletsRewardsValidator is a validator for the "walletsRewards" field. It is called by the builders before save.
	event.WalletsRewardsValidator = eventDescWalletsRewards.Validators[0].(func(int64) error)
	// eventDescCreatedAt is the schema descriptor for createdAt field.
	eventDescCreatedAt := eventFields[6].Descriptor()
	// event.DefaultCreatedAt holds the default value on creation for the createdAt field.
	event.DefaultCreatedAt = eventDescCreatedAt.Default.(func() time.Time)
	// eventDescID is the schema descriptor for id field.
	eventDescID := eventFields[0].Descriptor()
	// event.DefaultID holds the default value on creation for the id field.
	event.DefaultID = eventDescID.Default.(func() uuid.UUID)
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescHoursDone is the schema descriptor for hoursDone field.
	userDescHoursDone := userFields[4].Descriptor()
	// user.HoursDoneValidator is a validator for the "hoursDone" field. It is called by the builders before save.
	user.HoursDoneValidator = userDescHoursDone.Validators[0].(func(int64) error)
	// userDescTutorScope is the schema descriptor for tutorScope field.
	userDescTutorScope := userFields[5].Descriptor()
	// user.DefaultTutorScope holds the default value on creation for the tutorScope field.
	user.DefaultTutorScope = userDescTutorScope.Default.(bool)
	// userDescAdminScope is the schema descriptor for adminScope field.
	userDescAdminScope := userFields[6].Descriptor()
	// user.DefaultAdminScope holds the default value on creation for the adminScope field.
	user.DefaultAdminScope = userDescAdminScope.Default.(bool)
	// userDescID is the schema descriptor for id field.
	userDescID := userFields[0].Descriptor()
	// user.DefaultID holds the default value on creation for the id field.
	user.DefaultID = userDescID.Default.(func() uuid.UUID)
}
